name: "Backup CosmosDB to Azure Storage"
description: "Backs up a CosmosDB instance to a Storage Account using Azure CLI"
inputs:
  azure-credentials:
    description: 'JSON with Azure credentials'
    required: true
  cosmos-account:
    description: 'Name of the CosmosDB account'
    required: true
  cosmos-key:
    description: 'Access key for CosmosDB'
    required: true
  cosmos-db:
    description: 'Name of the database'
    required: true
  cosmos-container:
    description: 'Name of the container'
    required: true
  subscription-id:
    description: 'Azure subscription ID'
    required: true
  resource-group:
    description: 'Resource group of the CosmosDB'
    required: true
  storage-account:
    description: 'Name of the Storage Account'
    required: true
  container-name:
    description: 'Name of the container in the Storage Account'
    required: true
  action:
    description: 'Action to perform: backup or restore'
    required: true
    default: 'backup'
    options:
      - backup
      - restore

runs:
  using: "composite"
  steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: pip install -r ${{ github.action_path }}/requirements.txt
      shell: bash


    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ inputs.azure-credentials }}

    - name: Run Python script
      run: |
        export COSMOS_ENDPOINT="${{ inputs.cosmos-account }}.documents.azure.com"
        export COSMOS_KEY="${{ inputs.cosmos-key }}"
        export DATABASE_NAME="${{ inputs.cosmos-db }}"
        export CONTAINER_NAME="${{ inputs.cosmos-container }}"
        export SUBSCRIPTION_ID="${{ inputs.subscription-id }}"
        export RESOURCE_GROUP="${{ inputs.resource-group }}"
        export STORAGE_ACCOUNT_NAME="${{ inputs.storage-account }}"
        export STORAGE_CONTAINER="${{ inputs.container-name }}"
        export ACTION="${{ inputs.action }}"
        az account set -s "${{ inputs.subscription-id }}"

        python ${{ github.action_path }}/"${{ inputs.action }}".py 
      shell: bash
    - name: Upload file to Azure Storage
      if: ${{ inputs.action == 'backup' }}
      run: |
        az storage blob upload \
          --account-name ${{ inputs.storage-account }} \
          --container-name ${{ inputs.container-name }} \
          --file "${{ inputs.output-file }}" \
          --name "${{ inputs.output-file }}" \
          --auth-mode login
      shell: bash
